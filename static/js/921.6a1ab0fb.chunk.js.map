{"version":3,"file":"static/js/921.6a1ab0fb.chunk.js","mappings":"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","sources":["webpack://hw-05-movies/./src/components/pages/MovieDetailsPage/MovieDetailsPage.module.css?f504","components/pages/MovieDetailsPage/MovieDetailsPage.jsx","shared/services/movies.js","shared/services/posterLink.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MovieDetailsPage_container__CyIWr\",\"movieCard\":\"MovieDetailsPage_movieCard__hMuGg\",\"movieCardPoster\":\"MovieDetailsPage_movieCardPoster__lnQNz\",\"movieCardDescr\":\"MovieDetailsPage_movieCardDescr__Q9p3q\",\"movieCardTitle\":\"MovieDetailsPage_movieCardTitle__EKaAX\",\"movieCardScore\":\"MovieDetailsPage_movieCardScore__Q-iOm\",\"movieCardOverviewTitle\":\"MovieDetailsPage_movieCardOverviewTitle__s0QXc\",\"movieCardOverview\":\"MovieDetailsPage_movieCardOverview__nCn9j\",\"movieCardGenres\":\"MovieDetailsPage_movieCardGenres__-FjJl\",\"additionalInfoTitle\":\"MovieDetailsPage_additionalInfoTitle__EFkvE\",\"additionalInfo\":\"MovieDetailsPage_additionalInfo__1xYls\",\"additionalInfoList\":\"MovieDetailsPage_additionalInfoList__MvDdm\",\"additionalInfoItem\":\"MovieDetailsPage_additionalInfoItem__eWnev\"};","import { useParams, Link, Outlet } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport BeatLoader from 'react-spinners/BeatLoader';\n\nimport { getMovieById } from 'shared/services/movies';\nimport getImgLink from 'shared/services/posterLink';\nimport s from './MovieDetailsPage.module.css';\n\nconst MovieDetailsPage = () => {\n  const [state, setState] = useState({\n    movie: {},\n    loading: false,\n    error: null,\n  });\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchMovieById = async id => {\n      const { data } = await getMovieById(id);\n      setState(prevState => ({ ...prevState, movie: data, loading: false }));\n    };\n\n    try {\n      setState(prevState => ({ ...prevState, loading: true }));\n      fetchMovieById(movieId);\n    } catch (error) {\n      setState(prevState => ({\n        ...prevState,\n        loading: false,\n        error: error.message,\n      }));\n    }\n  }, [movieId]);\n  const { movie, loading } = state;\n  const { title, poster_path, release_date, vote_average, overview, genres } =\n    movie;\n\n  return (\n    <>\n      {loading && <BeatLoader />}\n      {Boolean(movie.id) && (\n        <div className={s.container}>\n          <div className={s.movieCard}>\n            <div className={s.movieCardPoster}>\n              <img\n                src={getImgLink(poster_path)}\n                alt=\"Movie Poster\"\n                width=\"360\"\n              />\n            </div>\n            <div className={s.movieCardDescr}>\n              <h2 className={s.movieCardTitle}>\n                {title} ({release_date.slice(0, 4)})\n              </h2>\n              <p className={s.movieCardScore}>User Score: {vote_average}</p>\n              <h3 className={s.movieCardOverviewTitle}>Overview</h3>\n              <p className={s.movieCardOverview}>{overview}</p>\n              <h3 className={s.movieCardGenres}>Genres</h3>\n              <p>{genres.map(({ name }) => name).join(', ')}</p>\n            </div>\n          </div>\n          <div className={s.additionalInfo}>\n            <h4 className={s.additionalInfoTitle}>Additional Information</h4>\n            <ul className={s.additionalInfoList}>\n              <li className={s.additionalInfoItem}>\n                <Link to={`/movies/${movieId}/cast`}>Cast</Link>\n              </li>\n              <li className={s.additionalInfoItem}>\n                <Link to={`/movies/${movieId}/reviews`}>Reviews</Link>\n              </li>\n            </ul>\n          </div>\n          <Outlet />\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetailsPage;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'f65bce350427b2684a98ce5b213c02c8',\n  },\n});\n\nexport const getTrendingMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n\n  return data.results;\n};\n\nexport const getMovieById = async id => {\n  const data = await instance.get(`/movie/${id}`);\n\n  return data;\n};\n\nexport const getMovieByQuery = async query => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query,\n    },\n  });\n\n  return data.results;\n};\n\nexport const getMovieReview = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n\n  return data.results;\n};\n\nexport const getMovieCredits = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n\n  return data.cast;\n};\n","import defaultPoster from '../../default-minimal.jpeg';\nconst IMG_BASE_URL = 'https://image.tmdb.org/t/p/w500';\n\nconst getImgLink = path => (path ? `${IMG_BASE_URL}${path}` : defaultPoster);\n\nexport default getImgLink;\n"],"names":["useState","movie","loading","error","state","setState","movieId","useParams","useEffect","fetchMovieById","id","getMovieById","data","prevState","message","title","poster_path","release_date","vote_average","overview","genres","Boolean","className","s","src","getImgLink","alt","width","slice","map","name","join","to","instance","axios","baseURL","params","api_key","getTrendingMovies","get","results","getMovieByQuery","query","getMovieReview","getMovieCredits","cast","path","defaultPoster"],"sourceRoot":""}