{"version":3,"file":"static/js/234.3ff3e308.chunk.js","mappings":"gPACA,EAA8B,6BAA9B,EAA2E,+BAA3E,EAA4H,iC,SCoD5H,EA/CgB,WACd,OAA0BA,EAAAA,EAAAA,UAAS,CACjCC,QAAS,GACTC,SAAS,EACTC,OAAO,IAHT,eAAOC,EAAP,KAAcC,EAAd,KAKQC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,WAAMC,GAAN,wFACCC,EAAAA,EAAAA,IAAeD,GADhB,OACZE,EADY,OAElBP,GAAS,SAAAQ,GAAS,yBAAUA,GAAV,IAAqBZ,QAASW,EAAMV,SAAS,OAF7C,2CAAH,sDAKjB,IACEG,GAAS,SAAAQ,GAAS,yBAAUA,GAAV,IAAqBX,SAAS,OAChDO,EAAYH,GACZ,MAAOH,GACPE,GAAS,SAAAQ,GAAS,yBACbA,GADa,IAEhBX,SAAS,EACTC,MAAOA,EAAMW,gBAGhB,CAACR,IAEJ,IAAQL,EAA4BG,EAA5BH,QAASC,EAAmBE,EAAnBF,QAASC,EAAUC,EAAVD,MACpBY,EAASC,QAAQf,EAAQgB,QAE/B,OACE,gCACGf,IAAW,sCACXC,IAAS,uBAAIA,IACbY,IACC,gBAAKG,UAAWC,EAAhB,SACGlB,EAAQmB,KAAI,gBAAGV,EAAH,EAAGA,GAAIW,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,4BACE,gBAAIJ,UAAWC,EAAf,qBAAuCE,MACvC,cAAGH,UAAWC,EAAd,SAAgCG,MAFxBZ,a,iMCxChBa,E,MAAWC,GAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAiB,mCAAG,sGACRL,EAASM,IAAI,uBADL,uBACvBjB,EADuB,EACvBA,KADuB,kBAGxBA,EAAKkB,SAHmB,2CAAH,qDAMjBC,EAAY,mCAAG,WAAMrB,GAAN,uFACPa,EAASM,IAAT,iBAAuBnB,IADhB,cACpBE,EADoB,yBAGnBA,GAHmB,2CAAH,sDAMZoB,EAAe,mCAAG,WAAMC,GAAN,yFACNV,EAASM,IAAI,gBAAiB,CACnDH,OAAQ,CACNO,MAAAA,KAHyB,uBACrBrB,EADqB,EACrBA,KADqB,kBAOtBA,EAAKkB,SAPiB,2CAAH,sDAUfnB,EAAc,mCAAG,WAAMD,GAAN,yFACLa,EAASM,IAAT,iBAAuBnB,EAAvB,aADK,uBACpBE,EADoB,EACpBA,KADoB,kBAGrBA,EAAKkB,SAHgB,2CAAH,sDAMdI,EAAe,mCAAG,WAAMxB,GAAN,yFACNa,EAASM,IAAT,iBAAuBnB,EAAvB,aADM,uBACrBE,EADqB,EACrBA,KADqB,kBAGtBA,EAAKuB,MAHiB,2CAAH","sources":["webpack://hw-05-movies/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx","shared/services/movies.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"reviewTitle\":\"Reviews_reviewTitle__-9Xsn\",\"reviewContent\":\"Reviews_reviewContent__oX1fD\",\"reviewContainer\":\"Reviews_reviewContainer__tMkPK\"};","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nimport { getMovieReview } from 'shared/services/movies';\nimport s from './Reviews.module.css';\n\nconst Reviews = () => {\n  const [state, setState] = useState({\n    reviews: [],\n    loading: false,\n    error: false,\n  });\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchReview = async id => {\n      const data = await getMovieReview(id);\n      setState(prevState => ({ ...prevState, reviews: data, loading: false }));\n    };\n\n    try {\n      setState(prevState => ({ ...prevState, loading: true }));\n      fetchReview(movieId);\n    } catch (error) {\n      setState(prevState => ({\n        ...prevState,\n        loading: false,\n        error: error.message,\n      }));\n    }\n  }, [movieId]);\n\n  const { reviews, loading, error } = state;\n  const isData = Boolean(reviews.length);\n\n  return (\n    <>\n      {loading && <p>...Loading</p>}\n      {error && <p>{error}</p>}\n      {isData && (\n        <div className={s.reviewContainer}>\n          {reviews.map(({ id, author, content }) => (\n            <div key={id}>\n              <h2 className={s.reviewTitle}>Author: {author}</h2>\n              <p className={s.reviewContent}>{content}</p>\n            </div>\n          ))}\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'f65bce350427b2684a98ce5b213c02c8',\n  },\n});\n\nexport const getTrendingMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n\n  return data.results;\n};\n\nexport const getMovieById = async id => {\n  const data = await instance.get(`/movie/${id}`);\n\n  return data;\n};\n\nexport const getMovieByQuery = async query => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query,\n    },\n  });\n\n  return data.results;\n};\n\nexport const getMovieReview = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n\n  return data.results;\n};\n\nexport const getMovieCredits = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n\n  return data.cast;\n};\n"],"names":["useState","reviews","loading","error","state","setState","movieId","useParams","useEffect","fetchReview","id","getMovieReview","data","prevState","message","isData","Boolean","length","className","s","map","author","content","instance","axios","baseURL","params","api_key","getTrendingMovies","get","results","getMovieById","getMovieByQuery","query","getMovieCredits","cast"],"sourceRoot":""}