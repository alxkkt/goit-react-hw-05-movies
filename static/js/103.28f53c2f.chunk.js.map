{"version":3,"file":"static/js/103.28f53c2f.chunk.js","mappings":"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","sources":["webpack://hw-05-movies/./src/components/Gallery/GalleryItem/GalleryItem.module.css?c101","components/Gallery/GalleryItem/GalleryItem.jsx","webpack://hw-05-movies/./src/shared/components/Searchbar/Searchbar.module.css?d9e2","shared/components/Searchbar/Searchbar.jsx","webpack://hw-05-movies/./src/pages/MoviesPage/MoviesPage.module.css?7ea7","pages/MoviesPage/MoviesPage.jsx","shared/services/movies.js","shared/services/posterLink.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"itemTitle\":\"GalleryItem_itemTitle__sbcND\",\"listItem\":\"GalleryItem_listItem__CiKsq\",\"itemInfo\":\"GalleryItem_itemInfo__d9kUl\",\"itemScore\":\"GalleryItem_itemScore__lUYYm\"};","import { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport s from './GalleryItem.module.css';\nimport getPosterLink from 'shared/services/posterLink';\n\nconst GalleryItem = ({ id, title, poster_path, vote_average }) => {\n  return (\n    <li className={s.listItem}>\n      <Link to={`/movies/${id}`}>\n        <div className={s.itemContainer}>\n          <img src={getPosterLink(poster_path)} alt={title} />\n          <div className={s.itemInfo}>\n            <h2 className={s.itemTitle}>{title}</h2>\n            <p className={s.itemScore}>\n              {vote_average === 0 ? 'N/A' : vote_average}\n            </p>\n          </div>\n        </div>\n      </Link>\n    </li>\n  );\n};\n\nexport default GalleryItem;\n\nGalleryItem.defaultProps = {\n  poster_path: PropTypes.string,\n};\n\nGalleryItem.propTypes = {\n  vote_average: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"SearchForm\":\"Searchbar_SearchForm__H1XNs\",\"SearchFormButton\":\"Searchbar_SearchFormButton__JffdS\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__RI+FL\",\"SearchFormInput\":\"Searchbar_SearchFormInput__3nJeb\"};","import { useState, memo } from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './Searchbar.module.css';\n\nconst Searchbar = ({ onSubmit }) => {\n  const [state, setState] = useState({\n    query: '',\n  });\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    setState({ query: '' });\n  };\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    setState(prevState => ({ ...prevState, [name]: value }));\n  };\n  return (\n    <form className={styles.SearchForm} onSubmit={handleSubmit}>\n      <button type=\"submit\" className={styles.SearchFormButton}>\n        <span className={styles.SearchFormButtonLabel}>Search</span>\n      </button>\n\n      <input\n        className={styles.SearchFormInput}\n        type=\"text\"\n        name=\"query\"\n        autoComplete=\"off\"\n        value={state.q}\n        autoFocus\n        onChange={handleChange}\n        placeholder=\"Search your favourite movie\"\n      />\n    </form>\n  );\n};\n\nexport default memo(Searchbar);\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"searchContainer\":\"MoviesPage_searchContainer__EhXbG\",\"itemTitle\":\"MoviesPage_itemTitle__SMl+U\",\"listItem\":\"MoviesPage_listItem__xJJsb\",\"itemInfo\":\"MoviesPage_itemInfo__7f4Zv\",\"gridList\":\"MoviesPage_gridList__WpImG\",\"itemScore\":\"MoviesPage_itemScore__mwuk+\"};","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { getMovieByQuery } from 'shared/services/movies';\n\nimport Searchbar from 'shared/components/Searchbar';\nimport GalleryItem from 'components/Gallery/GalleryItem';\n\nimport s from './MoviesPage.module.css';\n\nconst MoviesPage = () => {\n  const [loader, setLoader] = useState({\n    items: [],\n    loading: false,\n    error: null,\n  });\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      setLoader(prevState => ({ ...prevState, loading: true }));\n      try {\n        const result = await getMovieByQuery(query);\n        setLoader(prevState => ({\n          ...prevState,\n          loading: false,\n          items: result,\n        }));\n      } catch (error) {\n        setLoader(prevState => ({\n          ...prevState,\n          loading: false,\n          error: error.message,\n        }));\n      }\n    };\n    if (query) {\n      fetchPosts();\n    }\n  }, [query]);\n\n  const handleSubmit = ({ query }) => setSearchParams({ query });\n\n  const { items } = loader;\n\n  const isData = Boolean(items.length);\n\n  return (\n    <>\n      <div className={s.searchContainer}>\n        <Searchbar onSubmit={handleSubmit} />\n        {isData && (\n          <div className={s.container}>\n            <ul className={s.gridList}>\n              {items.map(item => (\n                <GalleryItem key={item.id} {...item} />\n              ))}\n            </ul>\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default MoviesPage;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'f65bce350427b2684a98ce5b213c02c8',\n  },\n});\n\nexport const getTrendingMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n\n  return data.results;\n};\n\nexport const getMovieById = async id => {\n  const data = await instance.get(`/movie/${id}`);\n\n  return data;\n};\n\nexport const getMovieByQuery = async query => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query,\n    },\n  });\n\n  return data.results;\n};\n\nexport const getMovieReview = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n\n  return data.results;\n};\n\nexport const getMovieCredits = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n\n  return data.cast;\n};\n","import defaultPoster from '../../default-minimal.jpeg';\nconst IMG_BASE_URL = 'https://image.tmdb.org/t/p/w500';\n\nconst getImgLink = path => (path ? `${IMG_BASE_URL}${path}` : defaultPoster);\n\nexport default getImgLink;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["GalleryItem","id","title","poster_path","vote_average","className","s","to","src","getPosterLink","alt","defaultProps","PropTypes","Searchbar","onSubmit","useState","query","state","setState","styles","e","preventDefault","type","name","autoComplete","value","q","autoFocus","onChange","target","prevState","placeholder","memo","items","loading","error","loader","setLoader","useSearchParams","searchParams","setSearchParams","get","useEffect","fetchPosts","getMovieByQuery","result","message","isData","Boolean","length","map","item","instance","axios","baseURL","params","api_key","getTrendingMovies","data","results","getMovieById","getMovieReview","getMovieCredits","cast","path","defaultPoster","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}